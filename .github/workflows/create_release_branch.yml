name: C2C - Create Release Branch

on:
  workflow_dispatch:
    branches:
      - main
    inputs:
      confirm:
        description: 'Confirm creating of release branch'
        required: true
        default: 'yes'

permissions:
  contents: write

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Read version from file
      id: read_version
      run: |
        git fetch --tags origin main
        git checkout main
        full_version=$(git describe --tags --abbrev=0 --match "[0-9]*.[0-9]*.[0-9]*")
        echo "Full version: $full_version"
        echo "full_version=$full_version" >> $GITHUB_OUTPUT
        short_version=$(echo "$full_version" | cut -d '.' -f 1,2) # Use only yy.mm part of the version
        echo "Short version (without minor): $short_version"
        echo "short_version=$short_version" >> $GITHUB_OUTPUT
    - name: Create release branch and move tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        full_version: ${{ steps.read_version.outputs.full_version }}
        short_version: ${{ steps.read_version.outputs.short_version }}
      run: |
        git fetch origin main
        git checkout main
        git checkout -b release/$short_version
        git push origin release/$short_version
        git tag -f "$full_version"
        git push origin -f "$full_version"

    - name: Create new version tag in main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        full_version: ${{ steps.read_version.outputs.full_version }}
      run: |
        git fetch origin main
        git checkout main
        IFS='.' read -r yy mm patch <<< "$full_version"
        mm=$((mm + 1))
        if [ $mm -gt 12 ]; then
          mm=1
          yy=$((yy + 1))
        fi
        patch=0
        new_version="$yy.$mm.$patch"
        echo "new version: $new_version"
        git tag "$new_version"
        git push origin "$new_version"